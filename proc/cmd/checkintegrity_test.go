package cmd

import (
	"testing"
)

// TestCheckHash tests checkHash function
func TestCheckHash(t *testing.T) {
	var cases = []struct {
		name     string
		filename string
		filedata []byte
		expected bool
	}{
		{"No Content returns false", "anyname", make([]byte, 0), false},
		{"No Filename returns false", "", []byte{0xa, 0xb}, false},
		{"Correct Hash returns true", "d7c9eb08e2606880.json", []byte{0x13, 0x09, 0xe7, 0x9e, 0xf4, 0x4b, 0xa9, 0xd5, 0x07, 0x2d, 0xcf, 0x3d, 0x0b, 0x69, 0xe4, 0xf2}, true},
		{"Wrong Hash returns false", "c4da928e9b789e7b.json", []byte{0x13, 0x09, 0xe7, 0x9e, 0xf4, 0x4b, 0xa9, 0xd5, 0x07, 0x2d, 0xcf, 0x3d, 0x0b, 0x69, 0xe4, 0xf2}, false},
		{"Correct Hash with path returns true", "data/d7c9eb08e2606880.json", []byte{0x13, 0x09, 0xe7, 0x9e, 0xf4, 0x4b, 0xa9, 0xd5, 0x07, 0x2d, 0xcf, 0x3d, 0x0b, 0x69, 0xe4, 0xf2}, true},
		{"Correct Hash with wrong file ending returns true", "d7c9eb08e2606880.txt", []byte{0x13, 0x09, 0xe7, 0x9e, 0xf4, 0x4b, 0xa9, 0xd5, 0x07, 0x2d, 0xcf, 0x3d, 0x0b, 0x69, 0xe4, 0xf2}, true},
		{"Correct Hash with multiple file endings returns true", "d7c9eb08e2606880.txt.mp4", []byte{0x13, 0x09, 0xe7, 0x9e, 0xf4, 0x4b, 0xa9, 0xd5, 0x07, 0x2d, 0xcf, 0x3d, 0x0b, 0x69, 0xe4, 0xf2}, true},
	}

	for _, c := range cases {
		r := checkHash(c.filename, c.filedata)
		if r != c.expected {
			t.Errorf("%v failed, returned %v, expected %v\n", c.name, r, c.expected)
		}
	}

}
